name: Build with Cabal

on: ['push']

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.6.5', '8.8.3', '8.10.1']
        cabal: ['3.2.0.0']
        os: ['ubuntu-16.04', 'ubuntu-18.04', 'macOS-latest']
        remoteConfigs: ['-remote-configs', '+remote-configs']

    steps:

    # Setup
    - name: Checkout repository
      uses: actions/checkout@v1
    - name: Install GHC and Cabal
      uses: actions/setup-haskell@v1.1
      with:
         ghc-version: ${{ matrix.ghc }}
         cabal-version: ${{ matrix.cabal }}
    - name: Configure project
      run: |
        cat > cabal.project.local <<EOF
        store-dir: "./cabal-store"
        package configuration-tools
          documentation: True
          benchmarks: True
          tests: True
          flags: ${{ matrix.remoteConfigs }}
        EOF
    - uses: actions/cache@v1
      name: Cache cabal store
      with:
        path: cabal-store/ghc-${{ matrix.ghc }}
        key: ${{ matrix.os }}-${{ matrix.ghc }}-store-${{ contains(matrix.remoteConfigs, '+') }}-${{ github.sha }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.ghc }}-store-${{ contains(matrix.remoteConfigs, '+') }}
          ${{ matrix.os }}-${{ matrix.ghc }}-store
    - uses: actions/cache@v1
      name: Cache dist-newstyle
      with:
        path: dist-newstyle
        key: ${{ matrix.os }}-${{ matrix.ghc }}-dist-${{ contains(matrix.remoteConfigs, '+') }}-${{ github.sha }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.ghc }}-dist-${{ contains(matrix.remoteConfigs, '+') }}
          ${{ matrix.os }}-${{ matrix.ghc }}-dist

    # Build
    - name: Update package database
      run: cabal v2-update
    - name: Configure build
      run: |
        cabal v2-build all --dry-run
        cabal v2-freeze
    - name: Install build dependencies
      run: cabal v2-build --only-dependencies
    - name: Build library
      run: cabal v2-build

    # Tests
    - name: Run Tests
      run: cabal v2-test

